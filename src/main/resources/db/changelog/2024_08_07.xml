<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
    http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.6.xsd">

    <changeSet id="init-db" author="author name">
        <sql>
            CREATE TABLE IF NOT EXISTS author (
            id BIGSERIAL PRIMARY KEY,
            name VARCHAR NOT NULL,
            surname VARCHAR NOT NULL
            );

            CREATE TABLE IF NOT EXISTS genre (
            id BIGSERIAL PRIMARY KEY,
            name VARCHAR NOT NULL
            );

            CREATE TABLE IF NOT EXISTS book (
            id BIGSERIAL PRIMARY KEY,
            name VARCHAR NOT NULL,
            genre_id BIGINT NOT NULL,
            FOREIGN KEY (genre_id) REFERENCES genre (id)
            );

            CREATE TABLE IF NOT EXISTS author_book (
            book_id BIGINT NOT NULL,
            author_id BIGINT NOT NULL,
            FOREIGN KEY (book_id) REFERENCES book (id),
            FOREIGN KEY (author_id) REFERENCES author (id)
            );

            INSERT INTO author(name, surname) VALUES
            ('Александр', 'Пушкин'),
            ('Николай', 'Гоголь'),
            ('Лев', 'Толстой'),
            ('Михаил', 'Булгаков'),
            ('Федор', 'Достоевский');

            INSERT INTO genre(name) VALUES
            ('Рассказ'),
            ('Роман'),
            ('Комедия'),
            ('Драма');

            INSERT INTO book(name, genre_id) VALUES
            ('Война и мир', 2),
            ('Преступление и наказание', 2),
            ('Нос', 1),
            ('Мастер и Маргарита', 2);

            INSERT INTO author_book(book_id, author_id) VALUES
            (1, 3),
            (2, 5),
            (3, 2),
            (4, 4);
        </sql>
    </changeSet>

    <changeSet id="add-users-table" author="author name">
        <sql>
            CREATE TABLE IF NOT EXISTS users (
            id BIGSERIAL PRIMARY KEY,
            login VARCHAR(255) UNIQUE NOT NULL,
            password VARCHAR(255) NOT NULL
            );

            INSERT INTO users(login, password) VALUES
            ('Inga', '$2a$10$somethingencrypted'),
            ('Diana', '$2a$10$anotherencryptedpassword'),
            ('Ars', '$2a$10$moreencryptedpasswords'),
            ('Ruslan', '$2a$10$encryptedpassword'),
            ('Kira', '$2a$10$anotheroneencryptedpassword');
        </sql>
    </changeSet>

    <changeSet id="add-role-table" author="author name">
        <sql>
            CREATE TABLE IF NOT EXISTS role (
            id BIGSERIAL PRIMARY KEY,
            role_name VARCHAR(255) NOT NULL
            );

            INSERT INTO role(role_name) VALUES
            ('USER'),
            ('ADMIN');
        </sql>
    </changeSet>

    <changeSet id="add-user-role-table" author="author name">
        <sql>
            CREATE TABLE IF NOT EXISTS user_role (
            user_id BIGINT NOT NULL,
            role_id BIGINT NOT NULL,
            FOREIGN KEY (user_id) REFERENCES users (id),
            FOREIGN KEY (role_id) REFERENCES role (id),
            PRIMARY KEY (user_id, role_id)
            );

            INSERT INTO user_role(user_id, role_id) VALUES
            (1, 1),
            (2, 2),
            (3, 1),
            (3, 2),
            (4, 1),
            (5, 1);

        </sql>
    </changeSet>

</databaseChangeLog>
